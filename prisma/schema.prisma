generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Title {
  Mr  @map("Mr")
  Mrs @map("Mrs")
  Ms  @map("Ms")
}

enum Gender {
  Male   @map("Male")
  FeMale @map("FeMale")
  Other  @map("Other")
}

enum Citizen {
  Thai       @map("Thai")
  Cambodian  @map("Cambodian")
  Lao        @map("Lao")
  Burmese    @map("Burmese")
  Vietnamese @map("Vietnamese")
}

enum Status {
  Active
  InActive
}

enum EmpEmploymentType {
  Daily           @map("Daily")
  Monthly         @map("Monthly")
  perDisabilities @map("perDisabilities")
}

enum EmpEmploymentTypes {
  Monthly
  Daily
  Contract
}

enum RequestReason {
  Replace
  New
}

enum PerReqReasonExperience {
  NoneExperience
  Experience1To4Years
  Experience5YearsUp
}

enum SkillLevel {
  Fair
  Good
  Excellent
}

enum PerReqStatus {
  PendingManagerApprove
  PendingHrApprove
  ApprovedSuccess
  Cancel
}

enum perReqEducation {
  PrimaryEducation
  SecondaryEducation
  VocationalCertificate
  HighVocationalCertificate
  BachelorMasterDegree
}

enum RecruitStatus {
  Pending
  Submitted
  Rejected
  Hired
  Considered
}

enum RecruitMaritalStatus {
  Single
  Married
  Divorced
  Widowed
}

enum RecruitMilitaryServiceStatus {
  Exempted
  Completed
  NotYetServed
}

enum RecruitFamilyRelation {
  Father
  Mother
  Elder
  Younger
  Wife
  Husband
}

enum RecruitBloodGroup {
  A
  B
  AB
  O
  Unknown
}

enum RecruitSpouseEarnIncome {
  Yes
  No
}

enum RecruitEmergencyRelation {
  Father
  Mother
  Sibling
  Friend
  Manager
  Other
}

enum EducationLevel {
  Primary
  LowerSecondary
  UpperSecondary
  Vocational
  HighVocational
  Bachelor
  Master
  Doctorate
}

enum EmploymentType {
  FullTime
  PartTime
  Internship
}

enum Residence {
  Parents_house
  Own_house
  Boarding_house_Rented_house
}

enum YesOrNo {
  Yes
  No
}

model Emp {
  empId          Int       @id @default(autoincrement())
  empTitle       Title
  empFirstNameTH String    @db.VarChar(255)
  empLastNameTH  String    @db.VarChar(255)
  empFirstNameEN String    @db.VarChar(255)
  empLastNameEN  String    @db.VarChar(255)
  empEmail       String    @db.VarChar(255)
  empTel         String    @db.VarChar(255)
  empIdCard      String    @db.VarChar(255)
  empBirthday    DateTime
  empCitizen     Citizen
  empGender      Gender
  empStatus      Status    @default(Active)
  empCreateBy    Int
  empCreateAt    DateTime  @default(now()) @db.Timestamp()
  empUpdateBy    Int?
  empUpdateAt    DateTime?

  EmpCreateBy Emp? @relation("CreateEmpBy", fields: [empCreateBy], references: [empId])
  EmpUpdateBy Emp? @relation("UpdateEmpBy", fields: [empUpdateBy], references: [empId])

  createEmp Emp[] @relation("CreateEmpBy")
  updateEmp Emp[] @relation("UpdateEmpBy")

  empEmpUser     EmpUser[] @relation("EmpUserEmpBy")
  createdEmpUser EmpUser[] @relation("EmpUserCreatedBy")
  updatedEmpUser EmpUser[] @relation("EmpUserUpdatedBy")

  empEmpEmployment     EmpEmployment[] @relation("EmpEmploymentEmpBy")
  parentEmpEmployment  EmpEmployment[] @relation("EmpEmploymentParentBy")
  createdEmpEmployment EmpEmployment[] @relation("EmpEmploymentCreatedBy")
  updatedEmpEmployment EmpEmployment[] @relation("EmpEmploymentUpdatedBy")

  empEmpDocument     EmpDocument[] @relation("EmpDocumentEmpBy")
  createdEmpDocument EmpDocument[] @relation("EmpDocumentCreateBy")
  updatedEmpDocument EmpDocument[] @relation("EmpDocumentUpdateBy")

  createdRole Role[] @relation("RoleCreateBy")
  updatedRole Role[] @relation("RoleUpdateBy")

  createdDivision Division[] @relation("DivisionCreateBy")
  updatedDivision Division[] @relation("DivisionUpdateBy")

  createdDepartment Department[] @relation("DepartmentCreateBy")
  updatedDepartment Department[] @relation("DepartmentUpdateBy")

  createdPosition Position[] @relation("PositionCreateBy")
  updatedPosition Position[] @relation("PositionUpdateBy")

  empEmpCv     EmpCv[] @relation("EmpCvEmpBy")
  createdEmpCv EmpCv[] @relation("EmpCvCreateBy")
  updatedEmpCv EmpCv[] @relation("EmpCvUpdateBy")

  createdPerReq        PerReq[]  @relation("PerReqCreateBy")
  updatedPerReq        PerReq[]  @relation("PerReqUpdateBy")
  managerApprovePerReq PerReq[]  @relation("PerReqManagerApproveBy")
  hrApprovePerReq      PerReq[]  @relation("PerReqHrApproveBy")
  updatedRecruit       Recruit[] @relation("RecruitUpdateBy")

  @@index([empCreateBy])
  @@index([empUpdateBy])
}

model EmpUser {
  empUserId       Int       @id @default(autoincrement())
  empUserEmpId    Int
  empUserUsername String?   @db.VarChar(255)
  empUserPassword String?   @db.VarChar(255)
  empUserPin      String?   @db.VarChar(255)
  isFirstLogin    Boolean   @default(true)
  empUserCreateBy Int
  empUserCreateAt DateTime  @default(now()) @db.Timestamp()
  empUserUpdateBy Int?
  empUserUpdateAt DateTime?

  EmpUserEmpBy    Emp? @relation("EmpUserEmpBy", fields: [empUserEmpId], references: [empId])
  EmpUserCreateBy Emp? @relation("EmpUserCreatedBy", fields: [empUserCreateBy], references: [empId])
  EmpUserUpdateBy Emp? @relation("EmpUserUpdatedBy", fields: [empUserUpdateBy], references: [empId])

  @@index([empUserEmpId])
  @@index([empUserCreateBy])
  @@index([empUserUpdateBy])
}

model EmpEmployment {
  empEmploymentId                  Int                @id @default(autoincrement())
  empEmploymentEmpId               Int
  empEmploymentNumber              String?            @db.VarChar(255)
  empEmploymentCardNumber          String?            @db.VarChar(255)
  empEmploymentType                EmpEmploymentType?
  empEmploymentDivisionId          Int?
  empEmploymentDepartmentId        Int?
  empEmploymentPositionId          Int?
  empEmploymentRoleId              Int?
  empEmploymentParentId            Int?
  empEmploymentStartWork           DateTime?
  empEmploymentPicture             String?            @db.VarChar(255)
  empEmploymentSignature           String?            @db.VarChar(255)
  empEmploymentEnterType           String?            @db.VarChar(255)
  empEmploymentPassportNumber      String?            @db.VarChar(255)
  empEmploymentPassportStartDate   DateTime?
  empEmploymentPassportEndDate     DateTime?
  empEmploymentPassportIssuedBy    String?            @db.VarChar(255)
  empEmploymentPlaceOfBirth        String?            @db.VarChar(255)
  empEmploymentEnterCheckPoint     String?            @db.VarChar(255)
  empEmploymentEnterDate           DateTime?
  empEmploymentImmigration         String?            @db.VarChar(255)
  empEmploymentTypeOfVisa          String?            @db.VarChar(255)
  empEmploymentVisaNumber          String?            @db.VarChar(255)
  empEmploymentVisaIssuedBy        String?            @db.VarChar(255)
  empEmploymentWorkPermitNumber    String?            @db.VarChar(255)
  empEmploymentWorkPermitStartDate DateTime?
  empEmploymentWorkPermitEndDate   DateTime?
  empEmploymentWorkPermitIssuedBy  String?            @db.VarChar(255)
  empEmploymentSsoNumber           String?            @db.VarChar(255)
  empEmploymentSsoHospital         String?            @db.VarChar(255)
  empEmploymentCreateBy            Int
  empEmploymentCreateAt            DateTime           @default(now()) @db.Timestamp()
  empEmploymentUpdateBy            Int?
  empEmploymentUpdateAt            DateTime?

  EmpEmploymentEmpBy    Emp? @relation("EmpEmploymentEmpBy", fields: [empEmploymentEmpId], references: [empId])
  EmpEmploymentParentBy Emp? @relation("EmpEmploymentParentBy", fields: [empEmploymentParentId], references: [empId])
  EmpEmploymentCreateBy Emp? @relation("EmpEmploymentCreatedBy", fields: [empEmploymentCreateBy], references: [empId])
  EmpEmploymentUpdateBy Emp? @relation("EmpEmploymentUpdatedBy", fields: [empEmploymentUpdateBy], references: [empId])

  EmpEmploymentRoleId       Role?       @relation("EmpEmploymentRoleId", fields: [empEmploymentRoleId], references: [roleId])
  EmpEmploymentDivisionId   Division?   @relation("EmpEmploymentDivisionId", fields: [empEmploymentDivisionId], references: [divisionId])
  EmpEmploymentDepartmentId Department? @relation("EmpEmploymentDepartmentId", fields: [empEmploymentDepartmentId], references: [departmentId])
  EmpEmploymentPositionId   Position?   @relation("EmpEmploymentPositionId", fields: [empEmploymentPositionId], references: [positionId])

  @@index([empEmploymentEmpId])
  @@index([empEmploymentDivisionId])
  @@index([empEmploymentDepartmentId])
  @@index([empEmploymentPositionId])
  @@index([empEmploymentRoleId])
  @@index([empEmploymentParentId])
  @@index([empEmploymentCreateBy])
  @@index([empEmploymentUpdateBy])
}

model EmpDocument {
  empDocumentId                          Int       @id @default(autoincrement())
  empDocumentEmpId                       Int
  empDocumentIdCardFile                  String?   @db.VarChar(255)
  empDocumentHomeFile                    String?   @db.VarChar(255)
  empDocumentProfessionalCertificateFile String?   @db.VarChar(255)
  empDocumentEducationsFile              String?   @db.VarChar(255)
  empDocumentPassportFile                String?   @db.VarChar(255)
  empDocumentImmigrationFile             String?   @db.VarChar(255)
  empDocumentVisa1File                   String?   @db.VarChar(255)
  empDocumentVisa2File                   String?   @db.VarChar(255)
  empDocumentVisa3File                   String?   @db.VarChar(255)
  empDocumentVisa4File                   String?   @db.VarChar(255)
  empDocumentVisa5File                   String?   @db.VarChar(255)
  empDocumentWorkPermit1File             String?   @db.VarChar(255)
  empDocumentWorkPermit2File             String?   @db.VarChar(255)
  empDocumentWorkPermit3File             String?   @db.VarChar(255)
  empDocumentWorkPermit4File             String?   @db.VarChar(255)
  empDocumentWorkPermit5File             String?   @db.VarChar(255)
  empDocumentOldPlaceFile                String?   @db.VarChar(255)
  empDocumentEmployerChange1File         String?   @db.VarChar(255)
  empDocumentEmployerChange2File         String?   @db.VarChar(255)
  empDocumentEmployerChange3File         String?   @db.VarChar(255)
  empDocumentEmployerChange4File         String?   @db.VarChar(255)
  empDocumentEmployerChange5File         String?   @db.VarChar(255)
  empDocumentCreateBy                    Int
  empDocumentCreateAt                    DateTime  @default(now()) @db.Timestamp()
  empDocumentUpdateBy                    Int?
  empDocumentUpdateAt                    DateTime?

  EmpDocumentEmpBy    Emp? @relation("EmpDocumentEmpBy", fields: [empDocumentEmpId], references: [empId])
  EmpDocumentCreateBy Emp? @relation("EmpDocumentCreateBy", fields: [empDocumentCreateBy], references: [empId])
  EmpDocumentUpdateBy Emp? @relation("EmpDocumentUpdateBy", fields: [empDocumentUpdateBy], references: [empId])

  @@index([empDocumentEmpId])
  @@index([empDocumentCreateBy])
  @@index([empDocumentUpdateBy])
}

model EmpCv {
  empCvId       Int       @id @default(autoincrement())
  empCvEmpId    Int
  empCvCreateBy Int
  empCvCreateAt DateTime  @default(now()) @db.Timestamp()
  empCvUpdateBy Int?
  empCvUpdateAt DateTime?

  EmpCvEmpBy    Emp? @relation("EmpCvEmpBy", fields: [empCvEmpId], references: [empId])
  EmpCvCreateBy Emp? @relation("EmpCvCreateBy", fields: [empCvCreateBy], references: [empId])
  EmpCvUpdateBy Emp? @relation("EmpCvUpdateBy", fields: [empCvUpdateBy], references: [empId])

  empCvEducation     EmpCvEducation[]
  empCvLicense       EmpCvProfessionalLicense[]
  empCvWorkHistory   EmpCvWorkHistory[]
  empCvLanguageSkill EmpCvLanguageSkill[]

  @@index([empCvEmpId])
  @@index([empCvCreateBy])
  @@index([empCvUpdateBy])
}

model EmpCvEducation {
  empCvEducationId            Int       @id @default(autoincrement())
  empCvEducationEmpCvId       Int
  empCvEducationDegreeTH      String?   @db.VarChar(255)
  empCvEducationDegreeEN      String?   @db.VarChar(255)
  empCvEducationInstitutionTH String?   @db.VarChar(255)
  empCvEducationInstitutionEN String?   @db.VarChar(255)
  empCvEducationStartDate     DateTime?
  empCvEducationEndDate       DateTime?

  empCv EmpCv @relation(fields: [empCvEducationEmpCvId], references: [empCvId])

  @@index([empCvEducationEmpCvId])
}

model EmpCvProfessionalLicense {
  empCvLicenseId        Int       @id @default(autoincrement())
  empCvLicenseEmpCvId   Int
  empCvLicenseNameTH    String?   @db.VarChar(255)
  empCvLicenseNameEN    String?   @db.VarChar(255)
  empCvLicenseNumber    String?   @db.VarChar(255)
  empCvLicenseStartDate DateTime?
  empCvLicenseEndDate   DateTime?

  empCv EmpCv @relation(fields: [empCvLicenseEmpCvId], references: [empCvId])

  @@index([empCvLicenseEmpCvId])
}

model EmpCvWorkHistory {
  empCvWorkHistoryId            Int       @id @default(autoincrement())
  empCvWorkHistoryEmpCvId       Int
  empCvWorkHistoryCompanyNameTH String?   @db.VarChar(255)
  empCvWorkHistoryCompanyNameEN String?   @db.VarChar(255)
  empCvWorkHistoryPositionTH    String?   @db.VarChar(255)
  empCvWorkHistoryPositionEN    String?   @db.VarChar(255)
  empCvWorkHistoryStartDate     DateTime?
  empCvWorkHistoryEndDate       DateTime?

  empCv EmpCv @relation(fields: [empCvWorkHistoryEmpCvId], references: [empCvId])

  empCvProjects EmpCvProject[]

  @@index([empCvWorkHistoryEmpCvId])
}

model EmpCvProject {
  empCvProjectId            Int     @id @default(autoincrement())
  empCvProjectWorkHistoryId Int
  empCvProjectNameTH        String? @db.VarChar(255)
  empCvProjectNameEN        String? @db.VarChar(255)
  empCvProjectDescriptionTH String? @db.VarChar(255)
  empCvProjectDescriptionEN String? @db.VarChar(255)

  empCvWorkHistory EmpCvWorkHistory @relation(fields: [empCvProjectWorkHistoryId], references: [empCvWorkHistoryId])

  @@index([empCvProjectWorkHistoryId])
}

model EmpCvLanguageSkill {
  empCvLanguageSkillId      Int         @id @default(autoincrement())
  empCvLanguageSkillEmpCvId Int
  empCvLanguageSkillNameTH  String?     @db.VarChar(255)
  empCvLanguageSkillNameEN  String?     @db.VarChar(255)
  empCvLanguageSkillLevel   SkillLevel?

  empCv EmpCv @relation(fields: [empCvLanguageSkillEmpCvId], references: [empCvId])

  @@index([empCvLanguageSkillEmpCvId])
}

model Role {
  roleId       Int       @id @default(autoincrement())
  roleName     String    @db.VarChar(255)
  roleStatus   Status    @default(Active)
  roleCreateBy Int
  roleCreateAt DateTime  @default(now()) @db.Timestamp()
  roleUpdateBy Int?
  roleUpdateAt DateTime?

  RoleCreateBy Emp? @relation("RoleCreateBy", fields: [roleCreateBy], references: [empId])
  RoleUpdateBy Emp? @relation("RoleUpdateBy", fields: [roleUpdateBy], references: [empId])

  roleIdEmpEmployment EmpEmployment[] @relation("EmpEmploymentRoleId")

  @@index([roleCreateBy])
  @@index([roleUpdateBy])
}

model Division {
  divisionId       Int       @id @default(autoincrement())
  divisionName     String    @db.VarChar(255)
  divisionNameShot String    @db.VarChar(255)
  divisionStatus   Status    @default(Active)
  divisionCreateBy Int
  divisionCreateAt DateTime  @default(now()) @db.Timestamp()
  divisionUpdateBy Int?
  divisionUpdateAt DateTime?

  DivisionCreateBy Emp? @relation("DivisionCreateBy", fields: [divisionCreateBy], references: [empId])
  DivisionUpdateBy Emp? @relation("DivisionUpdateBy", fields: [divisionUpdateBy], references: [empId])

  divisionIdDepartment    Department[]    @relation("DepartmentDivisionId")
  divisionIdPosition      Position[]      @relation("PositionDivisionId")
  divisionIdEmpEmployment EmpEmployment[] @relation("EmpEmploymentDivisionId")
  divisionIdPerReq        PerReq[]        @relation("PerReqDivisionId")

  @@index([divisionCreateBy])
  @@index([divisionUpdateBy])
}

model Department {
  departmentId         Int       @id @default(autoincrement())
  departmentDivisionId Int
  departmentName       String    @db.VarChar(255)
  departmentStatus     Status    @default(Active)
  departmentCreateBy   Int
  departmentCreateAt   DateTime  @default(now()) @db.Timestamp()
  departmentUpdateBy   Int?
  departmentUpdateAt   DateTime?

  DepartmentCreateBy   Emp?      @relation("DepartmentCreateBy", fields: [departmentCreateBy], references: [empId])
  DepartmentUpdateBy   Emp?      @relation("DepartmentUpdateBy", fields: [departmentUpdateBy], references: [empId])
  DepartmentDivisionId Division? @relation("DepartmentDivisionId", fields: [departmentDivisionId], references: [divisionId])

  departmentIdPosition      Position[]      @relation("PositionDepartmentId")
  departmentIdEmpEmployment EmpEmployment[] @relation("EmpEmploymentDepartmentId")
  departmentIdPerReq        PerReq[]        @relation("PerReqDepartmentId")

  @@index([departmentDivisionId])
  @@index([departmentCreateBy])
  @@index([departmentUpdateBy])
}

model Position {
  positionId           Int       @id @default(autoincrement())
  positionDivisionId   Int
  positionDepartmentId Int
  positionNameTH       String    @db.VarChar(255)
  positionNameEN       String    @db.VarChar(255)
  positionStatus       Status    @default(Active)
  positionCreateBy     Int
  positionCreateAt     DateTime  @default(now()) @db.Timestamp()
  positionUpdateBy     Int?
  positionUpdateAt     DateTime?

  PositionCreateBy     Emp?        @relation("PositionCreateBy", fields: [positionCreateBy], references: [empId])
  PositionUpdateBy     Emp?        @relation("PositionUpdateBy", fields: [positionUpdateBy], references: [empId])
  PositionDivisionId   Division?   @relation("PositionDivisionId", fields: [positionDivisionId], references: [divisionId])
  PositionDepartmentId Department? @relation("PositionDepartmentId", fields: [positionDepartmentId], references: [departmentId])

  positionIdEmpEmployment EmpEmployment[] @relation("EmpEmploymentPositionId")
  positionIdPosJobDes     PosJobDes[]     @relation("PosJobDesPositionId")
  positionIdPerReq        PerReq[]        @relation("PerReqPositionId")

  @@index([positionDivisionId])
  @@index([positionDepartmentId])
  @@index([positionCreateBy])
  @@index([positionUpdateBy])
}

model PosJobDes {
  posJobDesId             Int     @id @default(autoincrement())
  posJobDesPositionId     Int
  posJobDesAge            String?
  posJobDesSex            String? @db.Text
  posJobDesEducations     String? @db.Text
  posJobDesSkill          String? @db.Text
  posJobDesExperience     String? @db.Text
  posJobDesResponsibility String? @db.Text

  PosJobDesPositionId Position? @relation("PosJobDesPositionId", fields: [posJobDesPositionId], references: [positionId])

  @@index([posJobDesPositionId])
}

model PerReq {
  perReqId                     Int                    @id @default(autoincrement())
  perReqDocumentId             String                 @db.VarChar(255)
  perReqDesiredDate            DateTime
  perReqDivisionId             Int
  perReqDepartmentId           Int
  perReqPositionId             Int
  perReqAmount                 Int
  perReqEmpEmploymentType      EmpEmploymentTypes
  perReqEmpEmploymentTypeNote  String?                @db.VarChar(255)
  perReqReasonForRequest       RequestReason
  perReqReasonForRequestNote   String?                @db.VarChar(255)
  perReqReasonAge              String                 @db.VarChar(255)
  perReqReasonGender           Gender
  perReqReasonEducation        perReqEducation
  perReqReasonEducationNote    String?                @db.VarChar(255)
  perReqReasonExperience       PerReqReasonExperience
  perReqComputerSkills         Json?
  perReqLanguageSkills         Json?
  perReqDrivingLicenses        Json?
  perReqProfessionalLicenses   Json?
  perReqStatus                 PerReqStatus           @default(PendingManagerApprove)
  perReqCreateBy               Int
  perReqCreateAt               DateTime               @default(now()) @db.Timestamp()
  perReqUpdateBy               Int?
  perReqUpdateAt               DateTime?
  perReqReasonManagerApproveBy Int?
  perReqReasonManagerApproveAt DateTime?
  perReqReasonHrApproveBy      Int?
  perReqReasonHrApproveAt      DateTime?

  PerReqCreateBy         Emp? @relation("PerReqCreateBy", fields: [perReqCreateBy], references: [empId])
  PerReqUpdateBy         Emp? @relation("PerReqUpdateBy", fields: [perReqUpdateBy], references: [empId])
  PerReqManagerApproveBy Emp? @relation("PerReqManagerApproveBy", fields: [perReqReasonManagerApproveBy], references: [empId])
  PerReqHrApproveBy      Emp? @relation("PerReqHrApproveBy", fields: [perReqReasonHrApproveBy], references: [empId])

  PerReqDivisionId   Division?   @relation("PerReqDivisionId", fields: [perReqDivisionId], references: [divisionId])
  PerReqDepartmentId Department? @relation("PerReqDepartmentId", fields: [perReqDepartmentId], references: [departmentId])
  PerReqPositionId   Position?   @relation("PerReqPositionId", fields: [perReqPositionId], references: [positionId])

  perReqRecruit Recruit[] @relation("RecruitPerReqId")

  @@index([perReqCreateBy])
  @@index([perReqUpdateBy])
  @@index([perReqReasonManagerApproveBy])
  @@index([perReqReasonHrApproveBy])
  @@index([perReqDivisionId])
  @@index([perReqDepartmentId])
  @@index([perReqPositionId])
}

model Recruit {
  recruitId        Int           @id @default(autoincrement())
  recruitPerReqId  Int
  recruitStatus    RecruitStatus @default(Pending)
  recruitCreatedAt DateTime      @default(now()) @db.Timestamp()
  recruitUpdateBy  Int?
  recruitUpdatedAt DateTime?
  applySlug        String?       @unique @db.VarChar(255)

  recruitDetail RecruitDetail?

  recruitPerReq   PerReq @relation("RecruitPerReqId", fields: [recruitPerReqId], references: [perReqId])
  RecruitUpdateBy Emp?   @relation("RecruitUpdateBy", fields: [recruitUpdateBy], references: [empId])

  recruitFamilyMembers   RecruitFamilyMember[]   @relation("RecruitFamilyMemberRecruitId")
  recruitEducations      RecruitEducation[]      @relation("RecruitEducationRecruitId")
  recruitLanguageSkills  RecruitLanguageSkill[]  @relation("RecruitLanguageSkillId")
  recruitWorkExperiences RecruitWorkExperience[] @relation("RecruitWorkExperienceRecruitId")

  @@index([recruitPerReqId])
  @@index([recruitUpdateBy])
}

model RecruitDetail {
  recruitDetailId                           Int                          @id @default(autoincrement())
  recruitDetailRecruitId                    Int                          @unique
  recruitDetailSalary                       Int
  recruitDetailProfileImage                 String                       @db.VarChar(500)
  recruitDetailFullNameTh                         String                       @db.VarChar(255)
  recruitDetailFullNameEn                         String                       @db.VarChar(255)
  recruitDetailNickName                           String                       @db.VarChar(255)
  recruitDetailBirthDay                     DateTime
  recruitDetailGender                       Gender
  recruitDetailAge                          Int
  recruitDetailNationality                  String                       @db.VarChar(255)
  recruitDetailReligion                     String                       @db.VarChar(255)
  recruitDetailWright                       Int
  recruitDetailHeight                       Int
  recruitDetailBloodGroup                   RecruitBloodGroup
  recruitDetailIdCardNumber                 String                       @db.VarChar(20)
  recruitDetailIdCardIssuedAt               String                       @db.VarChar(255)
  recruitDetailIdCardIssuedDate             DateTime
  recruitDetailIdCardEndDate                DateTime
  recruitDetailPhone                        String                       @db.VarChar(20)
  recruitDetailEmail                        String                       @db.VarChar(255)
  recruitDetailLine                         String                       @db.VarChar(255)
  recruitDetailPresentAddress               String                       @db.VarChar(255)
  recruitDetailPresentAddressLink           String                       @db.VarChar(255)
  recruitDetailRegisteredAddress            String                       @db.VarChar(255)
  recruitDetailResidence                    Residence
  recruitDetailMaritalStatus                RecruitMaritalStatus
  recruitDetailSpouseEarnIncome             RecruitSpouseEarnIncome?
  recruitDetailSpouseIncomeAmount           Int?
  recruitDetailNumberOfChildren             Int?
  recruitDetailMilitaryStatus               RecruitMilitaryServiceStatus
  recruitDetailEmergencyFullName            String                       @db.VarChar(255)
  recruitDetailEmergencyRelationship        String                       @db.VarChar(255)
  recruitDetailEmergencyPhone               String                       @db.VarChar(255)
  recruitDetailLicenseName                  String?                      @db.VarChar(255)
  recruitDetailLicenseNumber                String?                      @db.VarChar(255)
  recruitDetailComputerSkill                String?                      @db.VarChar(255)
  recruitDetailSportSkill                   String?                      @db.VarChar(255)
  recruitDetailOtherSkill                   String?                      @db.VarChar(255)
  recruitDetailScoreToeic                   String?                      @db.VarChar(255)
  recruitDetailScoreToefl                   String?                      @db.VarChar(255)
  recruitDetailScoreIelts                   String?                      @db.VarChar(255)
  recruitDetailOwnCar                       YesOrNo
  recruitDetailOwnMotorcycle                YesOrNo
  recruitDetailHaveCarLicense               YesOrNo
  recruitDetailHaveMotorcycleLicense        YesOrNo
  recruitDetailWhenStartWork                String                       @db.VarChar(255)
  recruitDetailCheckWorkingHistory          YesOrNo
  recruitDetailDischarged                         YesOrNo
  recruitDetailDischargedReason                   String?                      @db.VarChar(255)
  recruitDetailSeriousIllnessOrContagious   YesOrNo
  recruitDetailIllnessName                  String?                      @db.VarChar(255)
  recruitDetailCriminalConvictionOrBankrupt YesOrNo
  recruitDetailIsPregnant                   YesOrNo
  recruitDetailPregnancyMonth               Int?
  recruitDetailHasRelativesInCompany        YesOrNo
  recruitDetailRelativesName                String?                      @db.VarChar(255)
  recruitDetailRef1Name                     String                       @db.VarChar(255)
  recruitDetailRef2Name                     String                       @db.VarChar(255)
  recruitDetailSelfIntro                    String?                      @db.Text
  recruitDetailSignatureImage               String?                      @db.VarChar(500)
  recruitDetailAttachIdCard                 String?                      @db.VarChar(500)
  recruitDetailAttachHouseReg               String?                      @db.VarChar(500)
  recruitDetailAttachEducation              String?                      @db.VarChar(500)
  recruitDetailAttachMedicalCert            String?                      @db.VarChar(500)
  recruitDetailAttachMilitaryDoc            String?                      @db.VarChar(500)
  recruitDetailConsentGeneral                     YesOrNo
  recruitDetailConsentSensitive                   YesOrNo
  recruitDetailConsentPdpa                        YesOrNo

  recruitDetailRecruit Recruit @relation(fields: [recruitDetailRecruitId], references: [recruitId])
}

model RecruitFamilyMember {
  recruitFamilyMemberId         Int                   @id @default(autoincrement())
  recruitFamilyMemberRecruitId  Int
  recruitFamilyMemberRelation   RecruitFamilyRelation
  recruitFamilyMemberFullName   String                @db.VarChar(255)
  recruitFamilyMemberAge        Int?
  recruitFamilyMemberOccupation String?               @db.VarChar(255)
  recruitFamilyMemberWorkplace  String?               @db.VarChar(255)
  recruitFamilyMemberPhone      String?               @db.VarChar(20)

  RecruitFamilyMemberRecruitId Recruit @relation("RecruitFamilyMemberRecruitId", fields: [recruitFamilyMemberRecruitId], references: [recruitId])

  @@index([recruitFamilyMemberRecruitId])
}

model RecruitEducation {
  recruitEducationId        Int            @id @default(autoincrement())
  recruitEducationRecruitId Int
  recruitEducationLevel     EducationLevel
  recruitEducationFromDate  DateTime
  recruitEducationToDate    DateTime
  recruitEducationSchool    String         @db.VarChar(255)
  recruitEducationDegree    String         @db.VarChar(255)
  recruitEducationMajor     String?        @db.VarChar(255)
  recruitEducationGPA       Float?

  RecruitEducationRecruitId Recruit @relation("RecruitEducationRecruitId", fields: [recruitEducationRecruitId], references: [recruitId])

  @@index([recruitEducationRecruitId])
}

model RecruitLanguageSkill {
  recruitLanguageSkillId        Int        @id @default(autoincrement())
  recruitLanguageSkillRecruitId Int
  recruitLanguageName           String     @db.VarChar(100)
  recruitLanguageListenLevel    SkillLevel
  recruitLanguageSpeakLevel     SkillLevel
  recruitLanguageReadLevel      SkillLevel
  recruitLanguageWriteLevel     SkillLevel

  RecruitLanguageSkillId Recruit @relation("RecruitLanguageSkillId", fields: [recruitLanguageSkillRecruitId], references: [recruitId])

  @@index([recruitLanguageSkillRecruitId])
}

model RecruitWorkExperience {
  recruitWorkExpId        Int            @id @default(autoincrement())
  recruitWorkExpRecruitId Int
  recruitWorkplaceName    String         @db.VarChar(255)
  recruitWorkPosition     String         @db.VarChar(255)
  recruitEmploymentType   EmploymentType
  recruitStartDate        DateTime
  recruitEndDate          DateTime?
  recruitSalary           Int?
  recruitExtraIncome      Int?
  recruitReasonForLeaving String?        @db.VarChar(255)
  recruitJobDescription   Json

  RecruitWorkExperienceRecruitId Recruit @relation("RecruitWorkExperienceRecruitId", fields: [recruitWorkExpRecruitId], references: [recruitId])

  @@index([recruitWorkExpRecruitId])
}
